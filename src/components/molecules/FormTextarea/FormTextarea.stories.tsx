import type { Meta, StoryObj } from '@storybook/react';
import { Form, Button, Space } from 'antd';
import { FormTextarea } from './FormTextarea';

const meta: Meta<typeof FormTextarea> = {
  title: 'Molecules/FormTextarea',
  component: FormTextarea,
  parameters: {
    layout: 'padded',
    docs: {
      description: {
        component: 'Standardized textarea component with consistent styling, validation, auto-resizing, and accessibility features.',
      },
    },
  },
  argTypes: {
    size: {
      control: { type: 'select' },
      options: ['small', 'middle', 'large'],
    },
    required: {
      control: { type: 'boolean' },
    },
    disabled: {
      control: { type: 'boolean' },
    },
    showCount: {
      control: { type: 'boolean' },
    },
    resize: {
      control: { type: 'select' },
      options: ['none', 'vertical', 'horizontal', 'both'],
    },
    minRows: {
      control: { type: 'number', min: 1, max: 10 },
    },
    maxRows: {
      control: { type: 'number', min: 1, max: 20 },
    },
  },
};

export default meta;
type Story = StoryObj<typeof FormTextarea>;

// Wrapper component for form context
const FormWrapper = ({ children }: { children: React.ReactNode }) => (
  <Form layout="vertical" style={{ maxWidth: 500 }}>
    {children}
  </Form>
);

export const Default: Story = {
  render: (args) => (
    <FormWrapper>
      <FormTextarea {...args} />
    </FormWrapper>
  ),
  args: {
    name: 'description',
    label: 'Description',
    placeholder: 'Enter a description...',
    helperText: 'Provide a detailed description of your project',
    minRows: 3,
  },
};

export const Required: Story = {
  render: (args) => (
    <FormWrapper>
      <FormTextarea {...args} />
    </FormWrapper>
  ),
  args: {
    name: 'comments',
    label: 'Comments',
    placeholder: 'Enter your comments...',
    required: true,
    helperText: 'Comments are required for this submission',
    minRows: 4,
  },
};

export const WithCharacterCount: Story = {
  render: (args) => (
    <FormWrapper>
      <FormTextarea {...args} />
    </FormWrapper>
  ),
  args: {
    name: 'bio',
    label: 'Bio',
    placeholder: 'Tell us about yourself...',
    maxLength: 500,
    showCount: true,
    helperText: 'Brief professional biography (max 500 characters)',
    minRows: 4,
    maxRows: 8,
  },
};

export const ErrorState: Story = {
  render: (args) => (
    <FormWrapper>
      <FormTextarea {...args} />
    </FormWrapper>
  ),
  args: {
    name: 'message_error',
    label: 'Message',
    placeholder: 'Enter your message...',
    value: 'Short message',
    error: 'Message must be at least 50 characters long',
    minRows: 3,
  },
};

export const SuccessState: Story = {
  render: (args) => (
    <FormWrapper>
      <FormTextarea {...args} />
    </FormWrapper>
  ),
  args: {
    name: 'feedback_success',
    label: 'Feedback',
    placeholder: 'Enter your feedback...',
    value: 'This is excellent feedback that provides detailed insights into the user experience and suggestions for improvement.',
    successMessage: 'Thank you for the detailed feedback!',
    minRows: 3,
  },
};

export const Disabled: Story = {
  render: (args) => (
    <FormWrapper>
      <FormTextarea {...args} />
    </FormWrapper>
  ),
  args: {
    name: 'readonly_notes',
    label: 'System Notes',
    value: 'These notes are automatically generated by the system and cannot be modified by users.',
    disabled: true,
    helperText: 'These notes are read-only',
    minRows: 3,
  },
};

export const DifferentSizes: Story = {
  render: () => (
    <FormWrapper>
      <Space direction="vertical" size="large" style={{ width: '100%' }}>
        <FormTextarea
          name="small_textarea"
          label="Small Textarea"
          size="small"
          placeholder="Small size textarea"
          minRows={2}
        />
        <FormTextarea
          name="medium_textarea"
          label="Medium Textarea (Default)"
          size="middle"
          placeholder="Medium size textarea"
          minRows={3}
        />
        <FormTextarea
          name="large_textarea"
          label="Large Textarea"
          size="large"
          placeholder="Large size textarea"
          minRows={4}
        />
      </Space>
    </FormWrapper>
  ),
};

export const AutoResizing: Story = {
  render: () => (
    <FormWrapper>
      <Space direction="vertical" size="large" style={{ width: '100%' }}>
        <FormTextarea
          name="auto_resize"
          label="Auto-Resizing Textarea"
          placeholder="Start typing to see auto-resize in action..."
          helperText="This textarea will grow as you type (min 3 rows, max 8 rows)"
          minRows={3}
          maxRows={8}
        />
        <FormTextarea
          name="fixed_resize"
          label="Fixed Size Textarea"
          placeholder="This textarea has a fixed size"
          helperText="This textarea won't auto-resize"
          rows={5}
          resize="none"
        />
      </Space>
    </FormWrapper>
  ),
};

export const ResizeOptions: Story = {
  render: () => (
    <FormWrapper>
      <Space direction="vertical" size="large" style={{ width: '100%' }}>
        <FormTextarea
          name="resize_vertical"
          label="Vertical Resize Only"
          placeholder="You can resize this vertically..."
          resize="vertical"
          helperText="Drag the corner to resize vertically only"
          minRows={3}
        />
        <FormTextarea
          name="resize_horizontal"
          label="Horizontal Resize Only"
          placeholder="You can resize this horizontally..."
          resize="horizontal"
          helperText="Drag the corner to resize horizontally only"
          minRows={3}
        />
        <FormTextarea
          name="resize_both"
          label="Resize Both Directions"
          placeholder="You can resize this in both directions..."
          resize="both"
          helperText="Drag the corner to resize in any direction"
          minRows={3}
        />
        <FormTextarea
          name="resize_none"
          label="No Resize"
          placeholder="This textarea cannot be resized..."
          resize="none"
          helperText="This textarea has a fixed size"
          minRows={3}
        />
      </Space>
    </FormWrapper>
  ),
};

export const CompleteForm: Story = {
  render: () => {
    const onFinish = (values: any) => {
      console.log('Form values:', values);
    };

    return (
      <Form layout="vertical" onFinish={onFinish} style={{ maxWidth: 500 }}>
        <FormTextarea
          name="projectDescription"
          label="Project Description"
          placeholder="Describe your simulation project..."
          required
          helperText="Provide a comprehensive overview of your project goals and methodology"
          minRows={4}
          maxRows={8}
        />
        <FormTextarea
          name="technicalRequirements"
          label="Technical Requirements"
          placeholder="List any specific technical requirements..."
          helperText="Include software versions, hardware specifications, etc."
          minRows={3}
          maxRows={6}
        />
        <FormTextarea
          name="expectedOutcomes"
          label="Expected Outcomes"
          placeholder="What results do you expect from this simulation?"
          required
          maxLength={1000}
          showCount
          helperText="Describe the anticipated results and deliverables"
          minRows={3}
          maxRows={5}
        />
        <FormTextarea
          name="additionalNotes"
          label="Additional Notes"
          placeholder="Any additional information or special considerations..."
          helperText="Optional - include any other relevant details"
          minRows={2}
          maxRows={4}
        />
        <Form.Item>
          <Button type="primary" htmlType="submit">
            Submit Project
          </Button>
        </Form.Item>
      </Form>
    );
  },
};